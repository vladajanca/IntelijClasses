 Static vs Instance Variables
 -->Static variables share the same memory
 -Declared inside a class but outside of any method constructor or block of code
 -Using keyword Static.
 -Static methods can access static variables or non Static
 -Non Static method cant access static variables

 -->Instance memory is not sharable, its different in every class
 -Declared inside the class but outside of method constructor or block of code


 Methods :
 1)
 -->Void method dont return anything, its just preform the action
 -->Return method return anything what was assingn to do
 2)
 --User-defined Methods: We can create our own method based on our requirements.
 --Standard Library Methods: These are built-in methods in Java that are available to use.

-->Constructor:
-everytime we create a instance variable we are creating a default constructor
============================================================================
Variables :
optinal               must                       must                  must
AccessModifier        nonAccessModifier          dataType              name;

Methods :
optinal               must                       must                  must
AccessModifier        nonAccessModifier          retunType              name();
==================================================================================
--Access Modifiers in same class==>you can access all of them
--Access Modifiers in diferent class same package ==>you can access all exept private
--Access Modifiers in diferent package==> Only public is available and
  protected can be available only if we use inheretance
=================================================================================
--Access Modifiers with constructors can be used as well
--Non Access Modifiers cant be used with constructors

